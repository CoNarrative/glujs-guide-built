**Table of Contents**  *generated with [DocToc](http://doctoc.herokuapp.com/)*

- [GluJS](root#glujs)
	- [Reactive applications](Reactive_applications#reactive-applications)
	- [Why GluJS? The short version](Why_GluJS?_The_short_version#why-glujs?-the-short-version)
	- [Why GluJS? The extended version](Why_GluJS?_The_extended_version#why-glujs?-the-extended-version)
		- [Existing challenges](Why_GluJS?_The_extended_version#existing-challenges)
			- [Difficult to test](Why_GluJS?_The_extended_version#difficult-to-test)
			- [Adding rich reactive behavior gets complicated fast](Why_GluJS?_The_extended_version#adding-rich-reactive-behavior-gets-complicated-fast)
			- [Server development can hold back client development (and vice versa).](undefined#server-development-can-hold-back-client-development-and-vice-versa)
			- [Enterprise requirements like localization and user privileges are hard to enforce](Why_GluJS?_The_extended_version#enterprise-requirements-like-localization-and-user-privileges-are-hard-to-enforce)
			- [Bloated disorganized code that's different for every developer](Why_GluJS?_The_extended_version#bloated-disorganized-code-that's-different-for-every-developer)
			- [Development is painfully slow](Why_GluJS?_The_extended_version#development-is-painfully-slow)
	- [The GluJS solution](The_GluJS_solution#the-glujs-solution)
		- [Test-first out-of-the box](The_GluJS_solution#test-first-out-of-the-box)
			- [Fast UI cycles even if the server-side is incomplete](The_GluJS_solution#fast-ui-cycles-even-if-the-server-side-is-incomplete)
			- [Tight, organized DRY code](undefined#tight-organized-dry-code)
			- [Enterprise-ready localization and access rights](The_GluJS_solution#enterprise-ready-localization-and-access-rights)
			- [Strong reusable design patterns for distributed teams](The_GluJS_solution#strong-reusable-design-patterns-for-distributed-teams)
			- [Get the most out of best-of-breed HTML 5 graphic libraries](The_GluJS_solution#get-the-most-out-of-best-of-breed-html-5-graphic-libraries)
			- [Drops in place into existing projects](The_GluJS_solution#drops-in-place-into-existing-projects)
	- [The Basic SVVM Pattern](The_Basic_SVVM_Pattern#the-basic-svvm-pattern)
		- [What is a specification?](The_Basic_SVVM_Pattern#what-is-a-specification?)
			- [The specification in code](The_Basic_SVVM_Pattern#the-specification-in-code)
		- [The view model](The_Basic_SVVM_Pattern#the-view-model)
		- [The view and binding](The_Basic_SVVM_Pattern#the-view-and-binding)
			- [Example flow between viewmodel and view](The_Basic_SVVM_Pattern#example-flow-between-viewmodel-and-view)
		- [Basic entry points](The_Basic_SVVM_Pattern#basic-entry-points)
	- [For ExtJS users: How does this compare?](For_ExtJS_users:_How_does_this_compare?#for-extjs-users:-how-does-this-compare?)
			- [Inline component approach (NOT GLUJS!)](undefined#inline-component-approach-not-glujs!)
			- [MVC approach (NOT GLUJS!)](undefined#mvc-approach-not-glujs!)
		- [The GluJS way](For_ExtJS_users:_How_does_this_compare?#the-glujs-way)
	- [The view model in full](The_view_model_in_full#the-view-model-in-full)
		- [Defining and creating a view model](The_view_model_in_full#defining-and-creating-a-view-model)
		- [A note on `this` and scope](undefined#a-note-on-this-and-scope)
		- [View model parts](The_view_model_in_full#view-model-parts)
		- [Example](The_view_model_in_full#example)
		- [Properties](The_view_model_in_full#properties)
			- [Serialization (data)](undefined#serialization-data)
		- [Formulas](The_view_model_in_full#formulas)
			- [IsValid](The_view_model_in_full#isvalid)
		- [Submodels / child view models](undefined#submodels-/-child-view-models)
			- [Lists and stores](The_view_model_in_full#lists-and-stores)
		- [The view model graph](The_view_model_in_full#the-view-model-graph)
		- [Commands](The_view_model_in_full#commands)
			- [Guard functions](The_view_model_in_full#guard-functions)
		- [Reactors](The_view_model_in_full#reactors)
				- [Example (NOT RECOMMENDED)](undefined#example-not-recommended)
				- [Example (RECOMMENDED)](undefined#example-recommended)
		- [Convenience methods](The_view_model_in_full#convenience-methods)
		- [Dialogs](The_view_(and_binding)_in_full#dialogs)
		- [View model mixins](The_view_model_in_full#view-model-mixins)
	- [Specifications in full](Specifications_in_full#specifications-in-full)
		- [Given](Specifications_in_full#given)
		- [When](Specifications_in_full#when)
		- [Meaning](Specifications_in_full#meaning)
			- [Simulation setup](Specifications_in_full#simulation-setup)
			- [User actions](Specifications_in_full#user-actions)
				- [Including the view in testing (sidebar)](undefined#including-the-view-in-testing-sidebar)
			- [Background jobs](Specifications_in_full#background-jobs)
			- [Ajax responses](Specifications_in_full#ajax-responses)
		- [ShouldHave](Specifications_in_full#shouldhave)
			- [getRequestsFor](Specifications_in_full#getrequestsfor)
	- [Simulation framework](Simulation_framework#simulation-framework)
		- [Ajax simulator](Simulation_framework#ajax-simulator)
			- [Routes](Simulation_framework#routes)
			- [Response objects](Simulation_framework#response-objects)
			- [Live demo / user training mode](undefined#live-demo-/-user-training-mode)
		- [Data simulator](Simulation_framework#data-simulator)
			- [Fake data](Simulation_framework#fake-data)
	- [The view (and binding) in full](undefined#the-view-and-binding-in-full)
		- [Defining a view](The_view_(and_binding)_in_full#defining-a-view)
			- [Includes (quick xtypes)](undefined#includes-quick-xtypes)
		- [Materializing a view](The_view_(and_binding)_in_full#materializing-a-view)
			- [Nested views](The_view_(and_binding)_in_full#nested-views)
			- [Layouts and View Factories](The_view_(and_binding)_in_full#layouts-and-view-factories)
			- [Dialogs](The_view_(and_binding)_in_full#dialogs)
		- [Binding syntax](The_view_(and_binding)_in_full#binding-syntax)
		- [Binding properties](The_view_(and_binding)_in_full#binding-properties)
			- [Inline text formulas](The_view_(and_binding)_in_full#inline-text-formulas)
		- [Binding commands](The_view_(and_binding)_in_full#binding-commands)
			- [Parameterized commands](The_view_(and_binding)_in_full#parameterized-commands)
		- [Container binding](The_view_(and_binding)_in_full#container-binding)
			- [Item Templates](The_view_(and_binding)_in_full#item-templates)
		- [Localization](The_view_(and_binding)_in_full#localization)
		- [Name-based binding](The_view_(and_binding)_in_full#name-based-binding)
	- [Recipes (Composition Patterns)](undefined#recipes-composition-patterns)
	- [Extending gluJS](Extending_gluJS#extending-glujs)
		- [view adapters](Extending_gluJS#view-adapters)
		- [view transformers](Extending_gluJS#view-transformers)
			- [Using a view transformer to build an authorization interceptor](undefined#using-a-view-transformer-to-build-an-authorization-interceptor)

#GluJS
Copyright (C) 2012 Mike Gai
All rights reserved (NOT under MIT license!!!)

GluJS is a lightweight specification-driven reactive UI framework for building rich enterprise web and mobile applications using HTML5 widget libraries like Sencha ExtJS.


*Copyright 2012 Mike Gai. All rights reserved.*